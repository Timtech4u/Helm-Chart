apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-helm-chart.fullname" . }}
  labels:
    {{- include "my-helm-chart.labels" . | nindent 4 }}
spec:
  strategy:
    type: {{ .Values.deploymentStrategy }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "my-helm-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "my-helm-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "my-helm-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.image.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.image.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}          
          env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: K8S_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if .Values.featureFlags.enabled }}  
          - name: FEATURE_FLAGS
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-feature-flags
                key: feature-flags-json
          {{- end }}                  
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-secrets
                optional: true
            - configMapRef:
                name:  {{ .Release.Name }}-configuration
                optional: true
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}    
          livenessProbe:
            httpGet:
              path:  {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port }}
              scheme: {{ .Values.readinessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path:  {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
              scheme: {{ .Values.readinessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.pvc.enabled }}
          volumeMounts:
            - mountPath: {{ .Values.pvc.mountPath }}
              {{- if .Values.pvc.subPath }}
              subPath: {{ .Values.pvc.subPath }}
              {{- end }}
              name: {{ .Values.pvc.name | default (printf "%s-volume" (include "my-helm-chart.fullname" .)) }}
          {{- if .Values.extra_pvc.enabled }}
            - mountPath: {{ .Values.extra_pvc.mountPath }}
              {{- if .Values.extra_pvc.subPath }}
              subPath: {{ .Values.extra_pvc.subPath }}
              {{- end }}
              name: {{ .Values.extra_pvc.claimName }}
          {{- end }}
          {{- if .Values.config_volume.enabled }}
            - mountPath: {{ .Values.config_volume.mountPath }}
              {{- if .Values.config_volume.subPath }}
              subPath: {{ .Values.config_volume.subPath }}
              {{- end }}
              name: config_volume
          {{- end }}              
          {{- end }}
      {{- if .Values.pvc.enabled }}
      volumes:
        - name: {{ .Values.pvc.name | default (printf "%s-volume" (include "my-helm-chart.fullname" .)) }}
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.claimName | default (printf "%s-claim" (include "my-helm-chart.fullname" .)) }}
      {{- if .Values.extra_pvc.enabled }}
        - name: {{ .Values.extra_pvc.claimName }}
          persistentVolumeClaim:
            claimName: {{ .Values.extra_pvc.claimName }}
      {{- end }}
      {{- if .Values.config_volume.enabled }}
        - name: config_volume
          configMap:
            name: {{ .Values.config_volume.configMapName }}
            items:
              - key: {{ .Values.config_volume.key }}
                path: {{ .Values.config_volume.path }}
      {{- end }}      
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
